"""
.                匹配除换行符以外的任意字符
[0123456789]     []是字符集合，表示匹配方括号中所包含的任意一个字符
[good]           匹配good中任意一个字符
[a-z]            匹配任意小写字母
[A-Z]            匹配任意大写字母
[0-9]            匹配任意数字，类似[0123456789]
[0-9a-zA-Z]      匹配任意的数字和字母
[0-9a-zA-Z_]     匹配任意的数字、字母和下划线
[^good]          匹配除了good这几个字母以外的所有字符，中括号里的^称为脱字符，表示不匹配集合中的字符
[^0-9]           匹配所有的非数字字符
\d               匹配数字，效果同[0-9]
\D               匹配非数字字符，效果同[^0-9]
\w               匹配数字，字母和下划线,效果同[0-9a-zA-Z_]
\W               匹配非数字，字母和下划线，效果同[^0-9a-zA-Z_]
\s               匹配任意的空白符(空格，回车，换行，制表，换页)，效果同[ \r\n\t\f]
\S               匹配任意的非空白符，效果同[^ \f\n\r\t]
"""
'''
匹配：match()
查找/搜索：search()/findall()/finditer()
替换：sub()/subn()
分割：split()
'''
import re

# 1.re模块中函数的调用方式
# a.方式一
# 注意：因为正则表达式中有很多特殊符号，所以书写正则采用r'xxxx'
pattern = re.compile(r'\d')
r = pattern.match('6')
print(r)

# b.方式二:推荐使用
r = re.match(r'\d','6')
print(r)

# 2.     .                匹配除换行符以外的任意字符   *****
# 注意：默认情况下，可以匹配除了换行符\n以外的任意字符
r = re.match(r'.','\n')
print(r)  # None

# 注意：设置flags=re.DOTALL,可以匹配所有字符，常用于存在大量换行符的文本匹配中
# 注意：flags一般以关键字参数的方式使用，避免在某些函数中无法使用
r = re.match(r'.','\n',re.DOTALL)
print(r)   # <re.Match object; span=(0, 1), match='\n'>

# 3.[xxxxx...]不管[]中书写了多少个字符，都只能匹配其中的一位
'''
[0123456789] ---->[0-9]    []是字符集合，表示匹配方括号中所包含的任意一个字符
[good]           匹配good中任意一个字符
[a-z]            匹配任意小写字母
[A-Z]            匹配任意大写字母
[0-9]            匹配任意数字，类似[0123456789]
[0-9a-zA-Z]      匹配任意的数字和字母
[0-9a-zA-Z_]     匹配任意的数字、字母和下划线
'''
r = re.match(r'[a-z]','y')
print(r)

r = re.match(r'[0-9a-zA-Z_]','%')
print(r)

r = re.match(r'[hywlxa]','%')
print(r)

# 4.[^xxxxxxx]:表示否定
'''
[^good]          匹配除了good这几个字母以外的所有字符，中括号里的^称为脱字符，表示不匹配集合中的字符
[^0-9]           匹配所有的非数字字符
'''
r = re.match(r'[^hywlxa]','h')
print(r)   # None

r = re.match(r'[^0-9a-zA-Z_]','%')
print(r)

# 5.
'''
\d               匹配数字，效果同[0-9]
\D               匹配非数字字符，效果同[^0-9]
\w               匹配数字，字母和下划线,效果同[0-9a-zA-Z_]
\W               匹配非数字，字母和下划线，效果同[^0-9a-zA-Z_]
\s               匹配任意的空白符(空格，回车，换行，制表，换页)，效果同[ \r\n\t\f]
\S               匹配任意的非空白符，效果同[^ \f\n\r\t]
'''
r = re.match(r'\w','%')
print(r)

# 练习：匹配一个由4位的验证码，每一位可以由数字或字母组成
r = re.match(r'[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]','45f7')
print(r)



